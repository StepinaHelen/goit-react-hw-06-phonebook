{"version":3,"sources":["Components/ListItem/ListItem.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/ContactList/ContactList.module.css","Components/Button/Button.module.css","Components/Container/Container.jsx","redux/Contacts/contacts-actions.js","Components/Button/Button.jsx","Components/ListItem/ListItem.jsx","Components/ContactList/ContactList.jsx","Components/ContactList/ContactList.container.js","Components/ContactForm/ContactForm.jsx","Components/ContactForm/ContactForm.container.js","Components/Filter/Filter.jsx","Components/Filter/Filter.container.js","App.js","redux/Contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","styles","container","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","Button","onClick","text","type","button","defaultProps","ListItem","contacts","onDeleteContact","map","listItem","ContactList","list","getVisibleContacts","allContacts","filter","normalizedContact","toLowerCase","contact","includes","connect","state","items","dispatch","contactsActions","ContactForm","handleInputChange","event","valueInput","currentTarget","setState","value","trimLeft","handleSubmit","preventDefault","props","test","toast","find","findContact","reset","this","onSubmit","form","label","input","onChange","React","Component","Filter","onHandleInputSearch","findContactLabel","findContactInput","e","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7dbaa63b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__3JXQF\",\"name\":\"ListItem_name__LsMmo\",\"number\":\"ListItem_number__3OE4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContact\":\"Filter_findContact__2UB5w\",\"findContactLabel\":\"Filter_findContactLabel__Qt-2E\",\"findContactInput\":\"Filter_findContactInput__370lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Wf2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3VptX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1azqE\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/Add', function prepare(name, number) {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/Delete');\r\nconst filterContact = createAction('contacts/Filter');\r\n\r\nexport default { addContact, deleteContact, filterContact };\r\n\r\n// было (Redax) :\r\n// import types from './contacts-types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = contactId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const filterContact = value => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n// export default { addContact, deleteContact, filterContact };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ onClick, text, type = 'button' }) => (\r\n  <button type={type} className={styles.button} onClick={onClick}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ListItem.module.css';\r\nimport Button from '../Button';\r\n\r\nconst ListItem = ({ contacts, onDeleteContact }) => {\r\n  return contacts.map(({ id, name, number }) => (\r\n    <li className={styles.listItem} key={id}>\r\n      <p className={styles.name}>{name} </p>\r\n      <p className={styles.number}>{number} </p>\r\n      <Button text=\"Delete\" onClick={() => onDeleteContact(id)} />\r\n    </li>\r\n  ));\r\n};\r\nListItem.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport styles from './ContactList.module.css';\r\nimport ListItem from '../ListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      <ListItem contacts={contacts} onDeleteContact={onDeleteContact} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/Contacts/contacts-actions';\r\nimport ContactList from './ContactList';\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedContact = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedContact),\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getVisibleContacts(state.contacts.items, state.contacts.filter),\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\n\r\nimport styles from './ContactForm.module.css';\r\nimport Button from '../Button';\r\nimport { toast } from 'react-toastify';\r\n\r\n// import { connect } from 'react-redux';\r\n// import contactsActions from '../../redux/Contacts/contacts-actions';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleInputChange = event => {\r\n    const valueInput = event.currentTarget.name;\r\n    this.setState({ [valueInput]: event.currentTarget.value.trimLeft() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { contacts, addContact } = this.props;\r\n    const { name, number } = this.state;\r\n    // с помощью expression\r\n    let expression = /^\\d+/;\r\n    if (!name || !number || expression.test(number) === false) {\r\n      return toast('Please fill all fields in the correct format');\r\n    }\r\n\r\n    // if (!name || !number) {\r\n    //   return toast('Please fill all fields in the correct format');\r\n    // }\r\n    const findName = contacts.find(findContact => {\r\n      return findContact.name === name;\r\n    });\r\n\r\n    if (findName) {\r\n      toast(`${name} is already in the contacts`);\r\n      // alert(`${name} is already in the contacts`);\r\n      this.reset();\r\n    } else {\r\n      addContact(name, number);\r\n      this.reset();\r\n    }\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <form onSubmit={this.handleSubmit} className={styles.form}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              name=\"number\"\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <Button text=\"Add contact\" type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   contacts: state.contacts.items,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   addContact: (name, number) =>\r\n//     dispatch(contactsActions.addContact(name, number)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\nexport default ContactForm;\r\n","import { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/Contacts/contacts-actions';\r\nimport ContactForm from './ContactForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onHandleInputSearch }) => {\r\n  return (\r\n    <div className={styles.findContact}>\r\n      <h2>Contacts</h2>\r\n      <label className={styles.findContactLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.findContactInput}\r\n          name=\"filter\"\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={onHandleInputSearch}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onHandleInputSearch: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/Contacts/contacts-actions';\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onHandleInputSearch: e =>\r\n    dispatch(contactsActions.filterContact(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './Components/Container';\nimport ContactList from './Components/ContactList';\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\n\nconst App = () => {\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => payload !== contact.id),\r\n});\r\nconst filter = createReducer('', {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\nexport default combineReducers({ items, filter });\r\n\r\n// import { combineReducers } from 'redux';\r\n// import types from './contacts-types';\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [payload, ...state];\r\n//     case types.DELETE:\r\n//       return state.filter(contact => payload !== contact.id);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({ items, filter });\r\n","import contactsReducer from './Contacts/contacts-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  // middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\nlet persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n// было (Redax) :\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import contactsReducer from './Contacts/contacts-reducer';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__wG1z0\",\"input\":\"ContactForm_input__2XxEe\",\"label\":\"ContactForm_label__1rAYL\"};"],"sourceRoot":""}